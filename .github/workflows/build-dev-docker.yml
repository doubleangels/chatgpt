name: Dev CI

on:
  push:
    branches:
      - dev

jobs:
  # 1) Lint job: runs first, ensuring code quality checks pass before anything else.
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install code-quality dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black isort mypy bandit

      - name: Run flake8 (lint)
        run: |
          flake8 .

      - name: Check Black formatting
        run: |
          black --check .

      - name: Check import order with isort
        run: |
          isort . --check --diff

      - name: Run mypy (type check)
        run: |
          mypy .

      - name: Run bandit (security checks)
        run: |
          bandit -r .

  # 2) Build and push Docker image: only runs if lint passes
  build-and-push:
    name: build-and-push-dev-image
    runs-on: ubuntu-latest
    needs: [lint]  # <-- This ensures the lint job must succeed first
    concurrency: build-${{ github.ref_name }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/buildx
          key: buildx-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            buildx-${{ github.ref_name }}-

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/chatgpt:dev
            ghcr.io/${{ github.repository_owner }}/chatgpt:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # 3) Delete workflow runs: only runs if build-and-push succeeds
  delete-workflow-runs:
    needs: [build-and-push]
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
    steps:
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 30
          keep_minimum_runs: 1

  # 4) Create Sentry release: only runs if build-and-push succeeds
  create-sentry-release:
    needs: [build-and-push]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: doubleangels
          SENTRY_PROJECT: chatgpt
        with:
          environment: production
          ignore_missing: true
